extends ../layout

append stylesheets

append scripts
  script(src='/_js/jquery-1.8.2.min.js')
  script(src='/_js/site.js')
  script
    $(document).ready(function() {
      function results(type, code, expl) {
        if (type == 'reset') {
          $('.results div').not('#start').hide();
          items = ['shoes', 'socks', 'belt', 'hat'];
        } else {
          $('.results div').show();
        }

        if (items[0] != undefined) {
          $('#start code').html(items.toString());
        } else {
          $('#start code').html('<strong>empty array</strong>');
        }

        $('#code code').html(code);
        var originalItems = items.toString();
        var returnVal = eval(code);
        if (items[0] != undefined) {
          if (originalItems == items.toString()) {
            $('#finish code').html('<strong>Array unchanged</strong>');
          } else {
            $('#finish code').html(items.toString());
          }
        } else {
          $('#finish code').html('<strong>empty array</strong>');
        }
        if (returnVal) {
          $('#return code').html(returnVal.toString());
        } else {
          $('#return code').html('nothing returned');
        }

        $('#explanation code').html(expl);
      }

      $('.results div').not('#start').hide();

      // - user interaction
      $('.example').click(function() {
        var $this = $(this);
        var resetA = $this.hasClass('reset');
        var code = resetA ? "var items = ['shoes', 'socks', 'belt', 'hat'];" : $this.text();
        var expl = $this.attr('title') || 'none';
        var type = resetA ? 'reset' : 'update';
        results(type, code, expl);
      });

      results('reset', "var items = ['shoes', 'socks', 'belt', 'hat'];", false);
    }); //end ready

block content
  .content
    .main
      #main
        h1= title
        .results
          h2 Results
          #start
            strong items[] contents at start: 
            code &nbsp;
          #code
            strong JavaScript code:
            code &nbsp;
          #finish
            strong items[] contents after JavaScript: 
            code &nbsp;
          #return
            strong Returned value: 
            code &nbsp;
          #explanation
            strong Explanation: 
            code.explanation &nbsp;blah
          #reset
            p(class='example reset') Reset array 
          
          // - h2 Original Array
          // - p.example(title="Initializes array with 4 items") items = ['shoes', 'socks', 'belt', 'hat'];
          
        .unit
          h2 
            | Splice
          p.example(title='removes 3rd item, and inserts two new items') 
            | items.splice(2, 1, 'coat', 'scarf');
          h2 
            | Push
          p.example(title='adds two items to end of array and returns total number of items in array')
            | items.push('umbrella', 'shirt');
          h2
            | Unshift
          p.example(title='adds two items to beginning of array and returns total number of items in array')
            | items.unshift('tie', 'pants');
          h2
            | Shift
          p.example(title='removes 1 item from the beginning of the array')
            | items.shift();

        .unit
          h2
            | Pop
          p.example(title='removes 1 item from end of array')
            | items.pop();
          h2
            | Slice
          p.example(title='creates a new array made up of a \'slice\' of the original array. The first number is the starting index, the second number is the ending index')
            | items.slice(1,2);
          h2
            | Reverse
          p.example(title='reverses the order of the items in the array')
            | items.reverse();
          h2
            | Join
          p.example(title='creates a string by combining the value of each array item. The string given to the join() command is used as the seperator')
            | items.join(':');

block end
  #resources
    p.open
      | +

    h2
      | Test Beds
    ul.nav
      li
        a(href='/selectors') jQuery Selectors Testbed
      li
        a(href='/content_functions') jQuery Content Functions Test Bed
      li
        a(href='/events') Events Test Bed
      li
        a(href='/effects') jQuery Effects Test Bed
      li
        a(href='/array_methods') Array Methods
      li
        a(href='/regex_tester') Regular Expression Tester

    h2
      | jQuery Resources
    ul.nav
      li
        a(href='http://jquery.com') jQuery
      li
        a(href='http://jqueryui.com/') jQuery UI
      li
        a(href='http://jquerymobile.com/') jQuery Mobile
      li
        a(href='http://jqapi.com/') jQAPI.com
